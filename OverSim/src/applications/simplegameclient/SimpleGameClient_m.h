//
// Generated file, do not edit! Created by opp_msgc 4.3 from applications/simplegameclient/SimpleGameClient.msg.
//

#ifndef _SIMPLEGAMECLIENT_M_H_
#define _SIMPLEGAMECLIENT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <NodeHandle.h>
    #include <OverlayKey.h>
    #include <Vector2D.h>
// }}



/**
 * Class generated from <tt>applications/simplegameclient/SimpleGameClient.msg</tt> by opp_msgc.
 * <pre>
 * message SCSnowTimer
 * {
 *         Vector2D position;
 *         unsigned int ip;
 * }
 * </pre>
 */
class SCSnowTimer : public ::cMessage
{
  protected:
    Vector2D position_var;
    unsigned int ip_var;

  private:
    void copy(const SCSnowTimer& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SCSnowTimer&);

  public:
    SCSnowTimer(const char *name=NULL, int kind=0);
    SCSnowTimer(const SCSnowTimer& other);
    virtual ~SCSnowTimer();
    SCSnowTimer& operator=(const SCSnowTimer& other);
    virtual SCSnowTimer *dup() const {return new SCSnowTimer(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual Vector2D& getPosition();
    virtual const Vector2D& getPosition() const {return const_cast<SCSnowTimer*>(this)->getPosition();}
    virtual void setPosition(const Vector2D& position);
    virtual unsigned int getIp() const;
    virtual void setIp(unsigned int ip);
};

inline void doPacking(cCommBuffer *b, SCSnowTimer& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SCSnowTimer& obj) {obj.parsimUnpack(b);}


#endif // _SIMPLEGAMECLIENT_M_H_
